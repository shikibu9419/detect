#!/bin/zsh

source $DOTPATH/bin/_shared_functions
readonly HIGHLIGHT='highlight --force -O ansi'

main() {
  detect::check

  if [ $1 = '-c' ]; then
    confirm 'Do you really want to clear GTAGS files?' && rm $(git rev-parse --show-cdup)(GPATH|GTAGS|GRTAGS)
  elif [ -d $1 ]; then
    detect::search-file $@
  elif [ -f $1 ]; then
    detect::search-def $@
  else
    detect::detect $@
  fi
}

detect::check() {
  check-git-available
  check-availables 'fzf' 'global'

  if ! $(global -u); then
    confirm 'Do you want to generate GTAGS files?' \
      && gtags -v $(git rev-parse --show-cdup) \
      || error 'detect: detection aborted.'
    echo
  fi
}

detect::search-file() {
  list=$(git ls-files $1)

  [ -z $list ] && error "detect: there is no file in $1."

  file=$(echo $list | fzf --ansi --prompt="$1> " --preview="$HIGHLIGHT {}" | awk '{ print $1 }')

  [ -z $file ] && error "detect: nothing is detected."

  detect::search-def "$file"
}

detect::search-def() {
  list=$(global -fx $1 | awk '{ print $1 " - " $2 }')

  [ -z $list ] && error "detect: nothing is detected."

  defs=$(echo $list | fzf -m --ansi --prompt="$content> " \
    --preview="set {}; \
      line=\$(cont=\${1}; $HIGHLIGHT $1 | sed -n \${3}p | grep --color=always \${cont/\?/\\\\?}); \
      $HIGHLIGHT $1 |
      sed -E '{3}'\"s/.*/\$line/\"" |
    awk '{ print $1 }' | sort | uniq |
    tr '\n' '|' | sed -e 's/|$//')

  [ -z $defs ] && error "detect: nothing is detected."

  detect::detect "($defs)"
}

detect::detect() {
  DEF_LABEL="${MAGENTA}${BOLD}def${DEFAULT}"
  REF_LABEL="${BLUE}${BOLD}ref${DEFAULT}"

  content=$1

  defs=$(global -dx $content | awk "{ print \"$DEF_LABEL$BOLD \" \$1 \" $DEFAULT: \" \$3 \" - \" \$2 }")
  refs=$(global -rx $content | awk "{ print \"$REF_LABEL$BOLD \" \$1 \" $DEFAULT: \" \$3 \" - \" \$2 }")
  list=$({ echo $defs; echo $refs } | sed '/^$/d')

  [ -z $list ] && error "detect: nothing is detected."

  while true; do
    files=$(echo $list | fzf -m --ansi --prompt="$content> " \
      --preview="set {}; \
        line=\$(cont={2}; $HIGHLIGHT \${4} | sed -n \${6}p | grep --color=always \${cont/\?/\\\\?}); \
        $HIGHLIGHT \${4} |
        sed -E '{6}'\"s/.*/\$line/\"" |
      awk '{ print $2 }' | sort | uniq)

    [ -z $files ] && exit 0
    echo $files | xargs nvim -p
  done
}

main $@
